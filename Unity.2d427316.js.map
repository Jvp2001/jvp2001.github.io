{"mappings":"AAAO,MAQMA,EACT,CACIC,MAAO,CACHC,MAAO,CACH,CACIC,KAAM,YACNC,KAAK,CAAEC,KAAM,SAAUC,MAAO,YAC9BC,MAAO,CACHJ,KAAM,iBACNK,MAAO,CAAEC,KAAM,CAAEC,MAAO,IAAKC,OAAQ,KAAMC,IAAK,aAKxD,CAEIT,KAAM,WACNC,KAAM,CAAEC,KAAM,SAAUC,MAAO,WAC/BC,MAAO,CACHJ,KAAM,wBACNK,MAAO,CAACC,KAAM,CAAEC,MAAO,IAAKC,OAAQ,KAAMC,IAAK,cAI3DC,UA5BR,CACIC,cAAe,8BACfC,SAAU,kFCClB,IAAIC,EAuBJ,SAASC,EAAkBC,EAA4BC,GAEnD,MAAMC,EAAOC,SAASC,cAAc,OACpCF,EAAKG,UAAUC,IAAI,QAAS,iBAE5B,MAAMC,EAAUJ,SAASC,cAAc,WACvCG,EAAQF,UAAUC,IAAI,QACtBC,EAAQC,MAAQ,mBAEhB,MAAMC,EAAON,SAASC,cAAc,KACpCK,EAAKC,KAAO,GAAGV,EAAKJ,iBAAiBK,EAASf,KAAKE,QAEnD,MAAMuB,EAASR,SAASC,cAAc,OACtCO,EAAOH,MAAQ,mBACfG,EAAOC,IAAM,GAAGZ,EAAKH,YAAYI,EAASZ,MAAMJ,OAChD,MAAMM,EAAOU,EAASZ,MAAMC,MAAMC,KAElCoB,EAAOrB,MAAME,MAAQ,GAAGD,EAAKC,UAC7BmB,EAAOrB,MAAMG,OAAS,GAAGF,EAAKE,WAC9Bc,EAAQM,iBAAiB,aAAaC,IAElCH,EAAON,UAAUC,IAAI,eAGzBC,EAAQM,iBAAiB,YAAYC,GAAKH,EAAON,UAAUU,OAAO,cAGlE,MAAMC,EAASb,SAASC,cAAc,UAEhCa,EAAQd,SAASC,cAAc,MAQrC,OAPAa,EAAMC,YAAcjB,EAAShB,KAC7B+B,EAAOG,OAAOV,GAEdA,EAAKU,OAAOF,GACZV,EAAQY,OAAOR,EAAQK,GACvBd,EAAKiB,OAAOZ,GAELL,CAGX,CA2BAC,SAASU,iBAAiB,oBAP1B,WAEIf,EAAYK,SAASiB,cAAc,mCACnCC,QAAQC,IAAI,uBAAqC,MAAbxB,GApBxC,SAAyByB,GAErBF,QAAQC,IAAIC,GACZ,MAAM5B,UAACA,EAASX,MAAEA,GAASuC,EACrBvB,EAAOL,GAAa,CAACC,cAAe,GAAIC,SAAU,IAClD2B,EAAMrB,SAASC,cAAc,OACnCoB,EAAInB,UAAUC,IAAI,OAClBe,QAAQC,IAAItC,GACZ,IAAK,MAAMyC,KAAQzC,EAEfwC,EAAIL,OAAOpB,EAAkBC,EAAMyB,IAEvCJ,QAAQC,IAAI,uBAAqC,MAAbxB,GACpCA,EAAUqB,OAAOK,EACrB,CAOIE,CAAgB5C,EAAkBC,MACtC","sources":["src/scripts/Config.ts","src/scripts/EnginePage.ts"],"sourcesContent":["export const config: PortfolioConfig = {titleHeading: {content: \"Joshua Petersen\"}}\n\n\nexport const defaultPageVariables: EnginePageConfigVars =\n    {\n        gitHubPageURL: \"https://github.com/jvp2001/\",\n        imageUrl: \"https://raw.githubusercontent.com/Jvp2001/jvp2001.github.io/main/src/images/\"\n    }\nexport const enginePagesConfig: EnginePagesConfig =\n    {\n        Unity: {\n            pages: [\n                {\n                    name: \"Maze Game\",\n                    link:{ type: \"GitHub\", value: \"MazeGame\"},\n                    image: {\n                        name: \"Unity/Maze.gif\",\n                        style: { size: { width: 200, height: 200}, fit: \"contain\" }\n                    }\n                    \n\n                },\n                {\n                    //TODO: Find the correct Git repo for this\n                    name: \"3D level\",\n                    link: { type: \"GitHub\", value: \"3DLevel\" },\n                    image: {\n                        name: \"Unity/3DGameLevel.gif\",\n                        style: {size: { width: 200, height: 200}, fit: \"contain\"}\n                    }\n                }\n            ],\n            variables: defaultPageVariables,\n            \n        }\n    }","import {enginePagesConfig} from \"./Config\";\n\n// Generate me a regex that finds all console.log statements. The contents of the the log functions could be anything, so we need to use a non-greedy wildcard.\n// const consoleLogRegex = /console\\.log\\((.*?)\\)/g\n\nimport \"../assets/css/main.css\"\n\nlet container: HTMLDivElement\n\n// I cannot get templates to work.\n\n\nfunction createImageModal(image: HTMLImageElement): HTMLDialogElement\n{\n    const dialog = document.createElement(\"dialog\") as HTMLDialogElement\n    dialog.classList.add(\"image-modal\")\n    dialog.append(image)\n    dialog.addEventListener(\"click\", event =>\n    {\n        const bounds = dialog.getBoundingClientRect()\n        if (\n            event.clientX < bounds.left\n            || event.clientX > bounds.right\n            || event.clientY < bounds.top\n            || event.clientY > bounds.bottom)\n            dialog.close()\n    })\n    return dialog\n}\n\nfunction createProjectItem(vars: EnginePageConfigVars, itemInfo: EnginePageProjectConfig)\n{\n    const root = document.createElement(\"div\") as HTMLDivElement\n    root.classList.add(\"col-4\", \"col-12-mobile\")\n\n    const article = document.createElement(\"article\") as HTMLElement\n    article.classList.add(\"item\")\n    article.title = \"Hover to enlarge\"\n\n    const aTag = document.createElement(\"a\") as HTMLAnchorElement\n    aTag.href = `${vars.gitHubPageURL}/${itemInfo.link.value}`\n\n    const imgTag = document.createElement(\"img\") as HTMLImageElement\n    imgTag.title = \"Click to enlarge\"\n    imgTag.src = `${vars.imageUrl}/${itemInfo.image.name}`\n    const size = itemInfo.image.style.size\n\n    imgTag.style.width = `${size.width}px`\n    imgTag.style.height = `${size.height}px`\n    article.addEventListener(\"mouseover\", _ =>\n    {\n        imgTag.classList.add(\"enlarged\")\n    })\n    \n    article.addEventListener(\"mouseout\", _ => imgTag.classList.remove(\"enlarged\"))\n\n    //imgTag.style.objectFit = itemInfo.image.style.fit ?? \"cover\"\n    const header = document.createElement(\"header\") as HTMLElement\n\n    const h3Tag = document.createElement(\"h3\") as HTMLHeadingElement\n    h3Tag.textContent = itemInfo.name\n    header.append(aTag)\n\n    aTag.append(h3Tag)\n    article.append(imgTag, header)\n    root.append(article)\n\n    return root\n\n\n}\n\n\nfunction setupEnginePage(config: EnginePageConfig)\n{\n    console.log(config)\n    const {variables, pages} = config\n    const vars = variables ?? {gitHubPageURL: \"\", imageUrl: \"\"}   satisfies EnginePageConfigVars\n    const row = document.createElement(\"div\") as HTMLDivElement\n    row.classList.add(\"row\")\n    console.log(pages!)\n    for (const page of pages!)\n    {\n        row.append(createProjectItem(vars, page))\n    }\n    console.log(\"Is container valid? \", container != null)\n    container.append(row)\n}\n\n\nfunction onDOMContentLoaded()\n{\n    container = document.querySelector(\"section#portfolio div.container\") as HTMLDivElement\n    console.log(\"Is container valid? \", container != null)\n    setupEnginePage(enginePagesConfig.Unity!)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", onDOMContentLoaded)\n\n\n"],"names":["$563b46d4f968334c$export$13e12d81112cd245","Unity","pages","name","link","type","value","image","style","size","width","height","fit","variables","gitHubPageURL","imageUrl","$099cc4aee96315fa$var$container","$099cc4aee96315fa$var$createProjectItem","vars","itemInfo","root","document","createElement","classList","add","article","title","aTag","href","imgTag","src","addEventListener","_","remove","header","h3Tag","textContent","append","querySelector","console","log","config","row","page","$099cc4aee96315fa$var$setupEnginePage"],"version":3,"file":"Unity.2d427316.js.map"}