{"mappings":"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","sources":["src/scripts/Config.ts","src/scripts/EnginePage.ts"],"sourcesContent":["export const config: PortfolioConfig = {titleHeading: {content: \"Joshua Petersen\"}}\n\n\nexport const defaultPageVariables: EnginePageConfigVars =\n    {\n        gitHubPageURL: \"https://github.com/jvp2001/\",\n        imageUrl: \"https://raw.githubusercontent.com/Jvp2001/jvp2001.github.io/main/src/images/\"\n    }\nexport const enginePagesConfig: EnginePagesConfig =\n    {\n        Unreal: {\n            pages: [\n                {\n                    name:\" Multiplayer Menu UI\",\n                    link: { type: \"GitHub\", value: \"MultiplayerUI\" },\n                    element: {\n                        name: \"Multiplayer Menu UI\",\n                        showControls: false,\n                        maximiseOnClick: true,\n                        style: { size: { width: 200, height: 200 }, fit: \"contain\" }\n                    }\n                }    \n            ]\n        },\n        Unity: {\n            pages: [\n                {\n                    name: \"Maze Game\",\n                    link:{ type: \"GitHub\", value: \"MazeGame\"},\n                    element: {\n                        name: \"Unity/Maze.gif\",\n                        style: { size: { width: 200, height: 200}, fit: \"contain\" }\n                    }\n                    \n\n                },\n                {\n                    //TODO: Find the correct Git repo for this\n                    name: \"3D level\",\n                    link: { type: \"GitHub\", value: \"3DLevel\" },\n                    element: {\n                        name: \"Unity/3DGameLevel.gif\",\n                        style: {size: { width: 200, height: 200}, fit: \"contain\"}\n                    }\n                }\n            ],\n            variables: defaultPageVariables,\n            \n        }\n    }","import {enginePagesConfig} from \"./Config\";\n\n// Generate me a regex that finds all console.log statements. The contents of the the log functions could be anything, so we need to use a non-greedy wildcard.\n// const consoleLogRegex = /console\\.log\\((.*?)\\)/g\n\nimport \"../assets/css/main.css\"\n\nlet container: HTMLDivElement\n\n// I cannot get templates to work.\n\n\n// function createImageModal(image: HTMLImageElement): HTMLDialogElement\n// {\n//     const dialog = document.createElement(\"dialog\") as HTMLDialogElement\n//     dialog.classList.add(\"image-modal\")\n//     dialog.append(image)\n//     dialog.addEventListener(\"click\", event =>\n//     {\n//         const bounds = dialog.getBoundingClientRect()\n//         if (\n//             event.clientX < bounds.left\n//             || event.clientX > bounds.right\n//             || event.clientY < bounds.top\n//             || event.clientY > bounds.bottom)\n//             dialog.close()\n//     })\n//     return dialog\n// }\n\n\nfunction isOfType<T>(obj: any, key: keyof T): obj is T\n{\n    return key in obj\n}\nfunction createProjectItemElement(vars: EnginePageConfigVars, element: ProjectElement)\n{\n    if(isOfType<VideoConfig>(element, \"showControls\"))\n    {\n        \n        const videoTag = document.createElement(\"video\") as HTMLVideoElement\n        videoTag.src = `${vars.imageUrl}/${element.name}`\n        const size = element.style.size\n\n        videoTag.style.width = `${size.width}px`\n        videoTag.style.height = `${size.height}px`\n        videoTag.style.objectFit = element.style.fit\n        videoTag.controls = element.showControls\n            \n        if (element.maximiseOnClick)\n            videoTag.addEventListener(\"click\", _ => videoTag.requestFullscreen())\n        return videoTag\n    }\n    \n    if (isOfType<ImageConfig>(element, \"style\"))\n    {\n        const imgTag = document.createElement(\"img\") as HTMLImageElement\n        imgTag.src = `${vars.imageUrl}/${element.name}`\n        const size = element.style.size\n\n        imgTag.style.width = `${size.width}px`\n        imgTag.style.height = `${size.height}px`\n        imgTag.style.objectFit = element.style.fit\n        return imgTag\n    }\n    \n    else\n        throw new Error(\"Unrecognised ProjectElement type\")\n}\nfunction createProjectItem(vars: EnginePageConfigVars, itemInfo: EnginePageProjectConfig)\n{\n    const root = document.createElement(\"div\") as HTMLDivElement\n    root.classList.add(\"col-4\", \"col-12-mobile\")\n\n    const article = document.createElement(\"article\") as HTMLElement\n    article.classList.add(\"item\")\n    article.title = \"Hover to enlarge\"\n\n    const aTag = document.createElement(\"a\") as HTMLAnchorElement\n    aTag.href = `${vars.gitHubPageURL}/${itemInfo.link.value}`\n\n    const projectTag = createProjectItemElement(vars, itemInfo.element)\n    //imgTag.style.objectFit = itemInfo.image.style.fit ?? \"cover\"\n    const header = document.createElement(\"header\") as HTMLElement\n\n    const h3Tag = document.createElement(\"h3\") as HTMLHeadingElement\n    h3Tag.textContent = itemInfo.name\n    header.append(aTag)\n\n    aTag.append(h3Tag)\n    article.append(projectTag, header)\n    root.append(article)\n\n    return root\n\n\n}\n\n\nfunction setupEnginePage(config: EnginePageConfig)\n{\n    console.log(config)\n    const {variables, pages} = config\n    const vars = variables ?? {gitHubPageURL: \"\", imageUrl: \"\"}   satisfies EnginePageConfigVars\n    const row = document.createElement(\"div\") as HTMLDivElement\n    row.classList.add(\"row\")\n    console.log(pages!)\n    for (const page of pages!)\n    {\n        row.append(createProjectItem(vars, page))\n    }\n    console.log(\"Is container valid? \", container != null)\n    container.append(row)\n}\n\n\nfunction onDOMContentLoaded()\n{\n    let title = document.getElementById(\"title\") as HTMLTitleElement\n    const engineName = title.textContent!.split(\" \")[0] as keyof typeof enginePagesConfig\n    \n    container = document.querySelector(\"section#portfolio div.container\") as HTMLDivElement\n\n    setupEnginePage(enginePagesConfig[engineName] as EnginePageConfig)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", onDOMContentLoaded)\n\n\n"],"names":["$563b46d4f968334c$export$13e12d81112cd245","Unreal","pages","name","link","type","value","element","showControls","maximiseOnClick","style","size","width","height","fit","Unity","variables","gitHubPageURL","imageUrl","$099cc4aee96315fa$var$container","$099cc4aee96315fa$var$isOfType","obj","key","$099cc4aee96315fa$var$createProjectItem","vars","itemInfo","root","document","createElement","classList","add","article","title","aTag","href","projectTag","videoTag","src","objectFit","controls","addEventListener","_","requestFullscreen","imgTag","Error","$099cc4aee96315fa$var$createProjectItemElement","header","h3Tag","textContent","append","engineName","getElementById","split","querySelector","config","console","log","row","page","$099cc4aee96315fa$var$setupEnginePage"],"version":3,"file":"Unity.0aede16e.js.map"}