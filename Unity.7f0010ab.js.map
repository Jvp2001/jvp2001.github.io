{"mappings":"AAAO,MAOMA,EACT,CACIC,MAAO,CACHC,MAAO,CACH,CACIC,KAAM,YACNC,KAAM,CAACC,KAAM,SAAUC,SAAU,IAEjCC,MAAO,6BAKfC,UAhBR,CACIC,cAAe,iCCChBC,EAAYC,SAASC,cAAc,+BACpCC,EAAsBF,SAASC,cAAc,yBAKnD,SAASE,EAAkBC,EAA4BC,GAEnD,MAAMC,EAAUJ,EAAoBK,QAAQC,WAAU,GAChDC,EAAQH,EAAQL,cAAc,MAC9BL,EAAQU,EAAQL,cAAc,OACpCL,EAAMc,IAAML,EAAST,MACrB,MAAMH,EAAOa,EAAQL,cAAc,KAGnC,OAFAU,QAAQC,IAAI,2BAA2B,CAACH,EAAOb,EAAOH,GAAMoB,OAAMC,GAAU,MAALA,KACvEL,EAAMM,YAAcV,EAASb,KACrBa,EAASZ,KAAKC,MAElB,IAAK,SACDD,EAAKuB,KAAO,GAAGZ,EAAKN,iBAAiBO,EAASZ,KAAKE,WACnDF,EAAKsB,YAAc,SACnB,MACJ,IAAK,UACD,IAAIE,EAAWZ,EAASZ,KAAKwB,SAC7BxB,EAAKuB,KAAO,GAAGC,EAASC,SAAS,SAAWD,EAASE,QAAQ,QAAS,IAAMF,SAC5ExB,EAAKsB,YAAc,OAK3B,OAAOT,CACX,CA3BAK,QAAQC,IAAIV,EAAoBK,SA8ChCa,OAAOC,OAASC,GAjBhB,SAAyBC,GAErBZ,QAAQC,IAAIW,GACZ,MAAM1B,UAACA,EAASN,MAAEA,GAASgC,EACrBnB,EAAOP,GAAa,CAACC,cAAe,IACpC0B,EAAMxB,SAASyB,cAAc,OACnCD,EAAIE,UAAUC,IAAI,OAClBhB,QAAQC,IAAIrB,GACZ,IAAK,MAAMqC,KAAQrC,EAEfiC,EAAIK,OAAO1B,EAAkBC,EAAMwB,IAEvCjB,QAAQC,IAAIY,GACZzB,EAAU8B,OAAOL,EACrB,CAGqBM,CAAgBzC,EAAkBC","sources":["src/scripts/Config.ts","src/scripts/EnginePage.ts"],"sourcesContent":["export const config: PortfolioConfig = {titleHeading: {content: \"Joshua Petersen\"}}\n\n\nexport const defaultPageVariables: EnginePageConfigVars =\n    {\n        gitHubPageURL: \"https://github.com/jvp2001/\"\n    }\nexport const enginePagesConfig: EnginePagesConfig =\n    {\n        Unity: {\n            pages: [\n                {\n                    name: \"Maze Game\",\n                    link: {type: \"GitHub\", repoName: \"\"},\n                    // image: \"https://raw.githubusercontent.com/jvp2001/UnityMazeGame/main/Assets/Textures/Title.png\"\n                    image: \"../images/Unity/Maze.gif\"\n                    \n\n                }\n            ],\n            variables: defaultPageVariables,\n            \n        }\n    }","import {enginePagesConfig} from \"./Config\";\n\n// Generate me a regex that finds all console.log statements. The contents of the the log functions could be anything, so we need to use a non-greedy wildcard.\n// const consoleLogRegex = /console\\.log\\((.*?)\\)/g\n\n\nconst  container = document.querySelector(\"section#portfolio.container\") as HTMLDivElement\nconst projectItemTemplate = document.querySelector(\"template#project-item\") as HTMLTemplateElement\n\nconsole.log(projectItemTemplate.content)\n\n\nfunction createProjectItem(vars: EnginePageConfigVars, itemInfo: EnginePageProjectConfig)\n{\n    const newItem = projectItemTemplate.content.cloneNode(true) as HTMLDivElement\n    const title = newItem.querySelector(\"h3\") as HTMLHeadingElement\n    const image = newItem.querySelector(\"img\") as HTMLImageElement\n    image.src = itemInfo.image\n    const link = newItem.querySelector(\"a\") as HTMLAnchorElement\n    console.log(\"Are all elements valid? \",[title, image, link].every(e => e != null))\n    title.textContent = itemInfo.name\n    switch (itemInfo.link.type)\n    {\n        case \"GitHub\":\n            link.href = `${vars.gitHubPageURL}/${itemInfo.link.repoName}`\n            link.textContent = \"GitHub\"\n            break\n        case \"SubPage\":\n            let pageName = itemInfo.link.pageName;\n            link.href = `${pageName.endsWith(\".html\") ? pageName.replace(\".html\", \"\") : pageName}.html`\n            link.textContent = \"Page\"\n            break\n        default:\n            //TODO: handle other link types\n    }\n    return newItem\n}\n\nfunction setupEnginePage(config: EnginePageConfig)\n{\n    console.log(config)\n    const {variables, pages} = config\n    const vars = variables ?? {gitHubPageURL: \"\"}   satisfies EnginePageConfigVars\n    const row = document.createElement(\"div\") as HTMLDivElement\n    row.classList.add(\"row\")\n    console.log(pages!)\n    for (const page of pages!)\n    {\n        row.append(createProjectItem(vars, page))\n    }\n    console.log(row)\n    container.append(row)\n}\n\n\nwindow.onload = _ => setupEnginePage(enginePagesConfig.Unity!)\n\n\n"],"names":["$563b46d4f968334c$export$13e12d81112cd245","Unity","pages","name","link","type","repoName","image","variables","gitHubPageURL","$099cc4aee96315fa$var$container","document","querySelector","$099cc4aee96315fa$var$projectItemTemplate","$099cc4aee96315fa$var$createProjectItem","vars","itemInfo","newItem","content","cloneNode","title","src","console","log","every","e","textContent","href","pageName","endsWith","replace","window","onload","_","config","row","createElement","classList","add","page","append","$099cc4aee96315fa$var$setupEnginePage"],"version":3,"file":"Unity.7f0010ab.js.map"}