{"mappings":"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","sources":["src/scripts/Config.ts","node_modules/fscreen/src/fscreen.js","src/scripts/EnginePage.ts"],"sourcesContent":["export const config: PortfolioConfig = {titleHeading: {content: \"Joshua Petersen\"}}\n\n\nexport const defaultPageVariables: EnginePageConfigVars =\n    {\n        gitHubPageURL: \"https://github.com/jvp2001/\",\n        rawContentUrl: \"https://raw.githubusercontent.com/Jvp2001/jvp2001.github.io/main/src/\", \n        imageUrl:\"images\",\n        videoUrl: \"videos\"\n    }\nexport const enginePagesConfig: EnginePagesConfig =\n    {\n        Unreal: {\n            pages: [\n                {\n                    name:\" Multiplayer Menu UI\",\n                    link: { type: \"GitHub\", value: \"MultiplayerUI\" },\n                    element: {\n                        name: \"Multiplayer Menu UI\",\n                        showControls: false,\n                        maximiseOnClick: true,\n                        style: { size: { width: 200, height: 200 }, fit: \"contain\" }\n                    }\n                },\n            ],\n            variables: defaultPageVariables,\n        },\n        Unity: {\n            pages: [\n                {\n                    name: \"Maze Game\",\n                    link:{ type: \"GitHub\", value: \"MazeGame\"},\n                    element: {\n                        name: \"Unity/Maze.gif\",\n                        style: { size: { width: 200, height: 200}, fit: \"contain\" }\n                    }\n                    \n\n                },\n                {\n                    //TODO: Find the correct Git repo for this\n                    name: \"3D level\",\n                    link: { type: \"GitHub\", value: \"3DLevel\" },\n                    element: {\n                        name: \"Unity/3DGameLevel.gif\",\n                        style: {size: { width: 200, height: 200}, fit: \"contain\"}\n                    }\n                }\n            ],\n            variables: defaultPageVariables,\n            \n        }\n    }","const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n","import {enginePagesConfig} from \"./Config\";\n           import fscreen from \"fscreen\"\n// Generate me a regex that finds all console.log statements. The contents of the the log functions could be anything, so we need to use a non-greedy wildcard.\n// const consoleLogRegex = /console\\.log\\((.*?)\\)/g\n\nimport \"../assets/css/main.css\"\n\nlet container: HTMLDivElement\n\n// I cannot get templates to work.\n\n\n// function createImageModal(image: HTMLImageElement): HTMLDialogElement\n// {\n//     const dialog = document.createElement(\"dialog\") as HTMLDialogElement\n//     dialog.classList.add(\"image-modal\")\n//     dialog.append(image)\n//     dialog.addEventListener(\"click\", event =>\n//     {\n//         const bounds = dialog.getBoundingClientRect()\n//         if (\n//             event.clientX < bounds.left\n//             || event.clientX > bounds.right\n//             || event.clientY < bounds.top\n//             || event.clientY > bounds.bottom)\n//             dialog.close()\n//     })\n//     return dialog\n// }\n\n\nfunction isOfType<T>(obj: any, key: keyof T): obj is T\n{\n    return key in obj\n}\nfunction createProjectItemElement(vars: EnginePageConfigVars, element: ProjectElement)\n{\n    if(isOfType<VideoConfig>(element, \"showControls\"))\n    {\n        \n        const videoTag = document.createElement(\"video\") as HTMLVideoElement\n        videoTag.src = `${vars.imageUrl}/${element.name}`\n        const size = element.style.size\n\n        videoTag.style.width = `${size.width}px`\n        videoTag.style.height = `${size.height}px`\n        videoTag.style.objectFit = element.style.fit\n        videoTag.controls = element.showControls\n            \n        if (element.maximiseOnClick)\n            videoTag.addEventListener(\"click\", _ => fscreen.requestFullscreen(videoTag))\n        videoTag.onended = _ => fscreen.exitFullscreen()\n        \n        \n        return videoTag\n    }\n    \n    if (isOfType<ImageConfig>(element, \"style\"))\n    {\n        const imgTag = document.createElement(\"img\") as HTMLImageElement\n        imgTag.src = `${vars.rawContentUrl}/${vars.imageUrl}/${element.name}`\n        const size = element.style.size\n\n        imgTag.style.width = `${size.width}px`\n        imgTag.style.height = `${size.height}px`\n        imgTag.style.objectFit = element.style.fit\n        return imgTag\n    }\n    \n    else\n        throw new Error(\"Unrecognised ProjectElement type\")\n}\nfunction createProjectItem(vars: EnginePageConfigVars, itemInfo: EnginePageProjectConfig)\n{\n    const root = document.createElement(\"div\") as HTMLDivElement\n    root.classList.add(\"col-4\", \"col-12-mobile\")\n\n    const article = document.createElement(\"article\") as HTMLElement\n    article.classList.add(\"item\")\n    article.title = \"Hover to enlarge\"\n\n    const aTag = document.createElement(\"a\") as HTMLAnchorElement\n    aTag.href = `${vars.rawContentUrl}/${vars.videoUrl}/${itemInfo.link.value}`\n    \n    \n    \n    const projectTag = createProjectItemElement(vars, itemInfo.element)\n    //imgTag.style.objectFit = itemInfo.image.style.fit ?? \"cover\"\n    const header = document.createElement(\"header\") as HTMLElement\n\n    const h3Tag = document.createElement(\"h3\") as HTMLHeadingElement\n    h3Tag.textContent = itemInfo.name\n    header.append(aTag)\n\n    aTag.append(h3Tag)\n    article.append(projectTag, header)\n    root.append(article)\n\n    return root\n\n\n}\n\n\nfunction setupEnginePage(config: EnginePageConfig)\n{\n    console.log(config)\n    const variables = config.variables\n    const pages = config.pages\n    const vars = variables ?? {gitHubPageURL: \"\", imageUrl: \"\", rawContentUrl: \"\", videoUrl: \"\"}   satisfies EnginePageConfigVars\n    const row = document.createElement(\"div\") as HTMLDivElement\n    row.classList.add(\"row\")\n    console.log(pages!)\n    for (const page of pages!)\n    {\n        row.append(createProjectItem(vars, page))\n    }\n    console.log(\"Is container valid? \", container != null)\n    container.append(row)\n}\n\n\nfunction onDOMContentLoaded()\n{\n   \n    const engineName = document.title.split(\" \")[0] as keyof typeof enginePagesConfig\n    console.log(engineName)\n    container = document.querySelector(\"section#portfolio div.container\") as HTMLDivElement\n\n    setupEnginePage(enginePagesConfig[engineName] as EnginePageConfig)\n}\n\nwindow.onload = onDOMContentLoaded\n\n\n"],"names":["$563b46d4f968334c$export$8e70048bd4697ae1","gitHubPageURL","rawContentUrl","imageUrl","videoUrl","$563b46d4f968334c$export$13e12d81112cd245","Unreal","pages","name","link","type","value","element","showControls","maximiseOnClick","style","size","width","height","fit","variables","Unity","$33c5d74223e4d2e5$var$key","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","fullscreen","$33c5d74223e4d2e5$var$webkit","$33c5d74223e4d2e5$var$moz","$33c5d74223e4d2e5$var$ms","$33c5d74223e4d2e5$var$document","window","document","$33c5d74223e4d2e5$var$vendor","Object","keys","requestFullscreenFunction","bind","fullscreenPseudoClass","addEventListener","handler1","options","removeEventListener","Boolean","val","onfullscreenchange","toLowerCase","handler","onfullscreenerror","$099cc4aee96315fa$var$container","$099cc4aee96315fa$var$isOfType","obj","key","$099cc4aee96315fa$var$createProjectItem","vars","itemInfo","root","createElement","classList","add","article","title","aTag","href","projectTag","videoTag","src","objectFit","controls","_","$33c5d74223e4d2e5$export$2e2bcd8739ae039","onended","imgTag","Error","$099cc4aee96315fa$var$createProjectItemElement","header","h3Tag","textContent","append","onload","engineName","split","console","log","querySelector","config","row","page","$099cc4aee96315fa$var$setupEnginePage"],"version":3,"file":"Unreal.a9150b24.js.map"}