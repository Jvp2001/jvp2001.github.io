{"mappings":"AAAO,MAQMA,EACT,CACIC,MAAO,CACHC,MAAO,CACH,CACIC,KAAM,YACNC,KAAM,CAACC,KAAM,SAAUC,SAAU,IAEjCC,MAAO,mBAKfC,UAjBR,CACIC,cAAe,8BACfC,SAAU,wECAlB,IAAIC,EACAC,EAGJ,SAASC,EAAkBC,EAA4BC,GAEnD,MAAMC,EAAUJ,EAAoBK,QAAQC,WAAU,GAChDC,EAAQH,EAAQI,cAAc,MAC9Bb,EAAQS,EAAQI,cAAc,OACpCb,EAAMc,IAAMN,EAASR,MACrB,MAAMH,EAAOY,EAAQI,cAAc,KAGnC,OAFAE,QAAQC,IAAI,2BAA4B,CAACJ,EAAOZ,EAAOH,GAAMoB,OAAMC,GAAU,MAALA,KACxEN,EAAMO,YAAcX,EAASZ,KACrBY,EAASX,KAAKC,MAElB,IAAK,SACDD,EAAKuB,KAAO,GAAGb,EAAKL,iBAAiBM,EAASX,KAAKE,WACnDF,EAAKsB,YAAc,SACnB,MACJ,IAAK,UACD,IAAIE,EAAWb,EAASX,KAAKwB,SAC7BxB,EAAKuB,KAAO,GAAGC,EAASC,SAAS,SAAWD,EAASE,QAAQ,QAAS,IAAMF,SAC5ExB,EAAKsB,YAAc,OAK3B,OAAOV,CACX,CA2BAe,SAASC,iBAAiB,oBAR1B,WAEIrB,EAAYoB,SAASX,cAAc,mCACnCR,EAAsBmB,SAASX,cAAc,yBAC7CE,QAAQC,IAAI,uBAAqC,MAAbZ,GArBxC,SAAyBsB,GAErBX,QAAQC,IAAIU,GACZ,MAAMzB,UAACA,EAASN,MAAEA,GAAS+B,EACrBnB,EAAON,GAAa,CAACC,cAAe,GAAIC,SAAU,IAClDwB,EAAMH,SAASI,cAAc,OACnCD,EAAIE,UAAUC,IAAI,OAClBf,QAAQC,IAAIrB,GACZ,IAAK,MAAMoC,KAAQpC,EAEfgC,EAAIK,OAAO1B,EAAkBC,EAAMwB,IAEvChB,QAAQC,IAAI,uBAAqC,MAAbZ,GACpCA,EAAU4B,OAAOL,EACrB,CAQIM,CAAgBxC,EAAkBC,MACtC","sources":["src/scripts/Config.ts","src/scripts/EnginePage.ts"],"sourcesContent":["export const config: PortfolioConfig = {titleHeading: {content: \"Joshua Petersen\"}}\n\n\nexport const defaultPageVariables: EnginePageConfigVars =\n    {\n        gitHubPageURL: \"https://github.com/jvp2001/\",\n        imageUrl: \"https://github.com/Jvp2001/jvp2001.github.io/tree/main/src/images/\"\n    }\nexport const enginePagesConfig: EnginePagesConfig =\n    {\n        Unity: {\n            pages: [\n                {\n                    name: \"Maze Game\",\n                    link: {type: \"GitHub\", repoName: \"\"},\n                    // image: \"https://raw.githubusercontent.com/jvp2001/UnityMazeGame/main/Assets/Textures/Title.png\"\n                    image: \"Unity/Maze.gif\"\n                    \n\n                }\n            ],\n            variables: defaultPageVariables,\n            \n        }\n    }","import {enginePagesConfig} from \"./Config\";\n\n// Generate me a regex that finds all console.log statements. The contents of the the log functions could be anything, so we need to use a non-greedy wildcard.\n// const consoleLogRegex = /console\\.log\\((.*?)\\)/g\n\n\nlet container: HTMLDivElement\nlet projectItemTemplate: HTMLTemplateElement\n\n\nfunction createProjectItem(vars: EnginePageConfigVars, itemInfo: EnginePageProjectConfig)\n{\n    const newItem = projectItemTemplate.content.cloneNode(true) as HTMLDivElement\n    const title = newItem.querySelector(\"h3\") as HTMLHeadingElement\n    const image = newItem.querySelector(\"img\") as HTMLImageElement\n    image.src = itemInfo.image\n    const link = newItem.querySelector(\"a\") as HTMLAnchorElement\n    console.log(\"Are all elements valid? \", [title, image, link].every(e => e != null))\n    title.textContent = itemInfo.name\n    switch (itemInfo.link.type)\n    {\n        case \"GitHub\":\n            link.href = `${vars.gitHubPageURL}/${itemInfo.link.repoName}`\n            link.textContent = \"GitHub\"\n            break\n        case \"SubPage\":\n            let pageName = itemInfo.link.pageName;\n            link.href = `${pageName.endsWith(\".html\") ? pageName.replace(\".html\", \"\") : pageName}.html`\n            link.textContent = \"Page\"\n            break\n        default:\n        //TODO: handle other link types\n    }\n    return newItem\n}\n\nfunction setupEnginePage(config: EnginePageConfig)\n{\n    console.log(config)\n    const {variables, pages} = config\n    const vars = variables ?? {gitHubPageURL: \"\", imageUrl: \"\"}   satisfies EnginePageConfigVars\n    const row = document.createElement(\"div\") as HTMLDivElement\n    row.classList.add(\"row\")\n    console.log(pages!)\n    for (const page of pages!)\n    {\n        row.append(createProjectItem(vars, page))\n    }\n    console.log(\"Is container valid? \", container != null)\n    container.append(row)\n}\n\n\nfunction onDOMContentLoaded()\n{\n    container = document.querySelector(\"section#portfolio div.container\") as HTMLDivElement\n    projectItemTemplate = document.querySelector(\"template#project-item\") as HTMLTemplateElement\n    console.log(\"Is container valid? \", container != null)\n    setupEnginePage(enginePagesConfig.Unity!)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", onDOMContentLoaded)\n\n\n"],"names":["$563b46d4f968334c$export$13e12d81112cd245","Unity","pages","name","link","type","repoName","image","variables","gitHubPageURL","imageUrl","$099cc4aee96315fa$var$container","$099cc4aee96315fa$var$projectItemTemplate","$099cc4aee96315fa$var$createProjectItem","vars","itemInfo","newItem","content","cloneNode","title","querySelector","src","console","log","every","e","textContent","href","pageName","endsWith","replace","document","addEventListener","config","row","createElement","classList","add","page","append","$099cc4aee96315fa$var$setupEnginePage"],"version":3,"file":"Unity.89477218.js.map"}